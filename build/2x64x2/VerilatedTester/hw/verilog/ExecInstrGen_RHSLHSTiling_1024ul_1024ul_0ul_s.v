// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ExecInstrGen_RHSLHSTiling_1024ul_1024ul_0ul_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V_V_TDATA,
        in_V_V_TVALID,
        in_V_V_TREADY,
        out_V_V_TDATA,
        out_V_V_TVALID,
        out_V_V_TREADY
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_pp0_stage0 = 11'd8;
parameter    ap_ST_fsm_pp0_stage1 = 11'd16;
parameter    ap_ST_fsm_pp0_stage2 = 11'd32;
parameter    ap_ST_fsm_pp0_stage3 = 11'd64;
parameter    ap_ST_fsm_pp0_stage4 = 11'd128;
parameter    ap_ST_fsm_pp0_stage5 = 11'd256;
parameter    ap_ST_fsm_pp0_stage6 = 11'd512;
parameter    ap_ST_fsm_state13 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [207:0] in_V_V_TDATA;
input   in_V_V_TVALID;
output   in_V_V_TREADY;
output  [127:0] out_V_V_TDATA;
output   out_V_V_TVALID;
input   out_V_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [207:0] in_V_V_0_data_out;
wire    in_V_V_0_vld_in;
wire    in_V_V_0_vld_out;
wire    in_V_V_0_ack_in;
reg    in_V_V_0_ack_out;
reg   [207:0] in_V_V_0_payload_A;
reg   [207:0] in_V_V_0_payload_B;
reg    in_V_V_0_sel_rd;
reg    in_V_V_0_sel_wr;
wire    in_V_V_0_sel;
wire    in_V_V_0_load_A;
wire    in_V_V_0_load_B;
reg   [1:0] in_V_V_0_state;
wire    in_V_V_0_state_cmp_full;
reg   [127:0] out_V_V_1_data_in;
reg   [127:0] out_V_V_1_data_out;
reg    out_V_V_1_vld_in;
wire    out_V_V_1_vld_out;
wire    out_V_V_1_ack_in;
wire    out_V_V_1_ack_out;
reg   [127:0] out_V_V_1_payload_A;
reg   [127:0] out_V_V_1_payload_B;
reg    out_V_V_1_sel_rd;
reg    out_V_V_1_sel_wr;
wire    out_V_V_1_sel;
wire    out_V_V_1_load_A;
wire    out_V_V_1_load_B;
reg   [1:0] out_V_V_1_state;
wire    out_V_V_1_state_cmp_full;
reg    in_V_V_TDATA_blk_n;
reg    out_V_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] rhstile_first_reg_1760;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] tile_first_reg_1746;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] tile_last_reg_1753;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] rhstile_last_reg_1764;
reg   [0:0] tile_last_reg_1753_pp0_iter1_reg;
reg   [0:0] rhstile_last_reg_1764_pp0_iter1_reg;
reg   [31:0] i_reg2mem_0_reg_183;
reg   [207:0] tmp_V_reg_1496;
reg    ap_block_state1;
wire   [15:0] ins_in_tiles_m_fu_314_p1;
reg   [15:0] ins_in_tiles_m_reg_1501;
reg  signed [15:0] exec_numTiles_V_reg_1507;
wire   [7:0] ins_in_bits_l_fu_338_p4;
reg   [7:0] ins_in_bits_l_reg_1520;
wire   [5:0] p_Result_4_i_fu_348_p4;
reg   [5:0] p_Result_4_i_reg_1528;
reg   [0:0] ins_in_signed_l_reg_1536;
reg   [0:0] ins_in_signed_r_reg_1543;
reg   [15:0] ins_in_base_l_reg_1550;
reg   [15:0] ins_in_base_r_reg_1555;
reg   [7:0] ins_in_nbufs_fetch_exec_log2_reg_1560;
wire  signed [31:0] mul_ln87_fu_1441_p2;
reg  signed [31:0] mul_ln87_reg_1566;
wire   [13:0] mul_ln87_1_fu_420_p2;
reg   [13:0] mul_ln87_1_reg_1571;
wire   [31:0] mul_ln87_2_fu_429_p2;
reg   [31:0] mul_ln87_2_reg_1576;
wire    ap_CS_fsm_state2;
wire   [7:0] ins_in_bits_r_fu_434_p1;
reg   [7:0] ins_in_bits_r_reg_1582;
wire    ap_CS_fsm_state3;
wire   [7:0] z1_fu_442_p1;
reg   [7:0] z1_reg_1588;
wire   [7:0] z2_fu_451_p1;
reg   [7:0] z2_reg_1595;
wire   [7:0] j_fu_455_p3;
reg   [7:0] j_reg_1602;
wire   [7:0] lmem_num_regions_fu_463_p2;
reg   [7:0] lmem_num_regions_reg_1609;
wire   [15:0] lmem_region_size_fu_477_p1;
reg   [15:0] lmem_region_size_reg_1615;
wire   [9:0] p_cast34_fu_484_p1;
reg   [9:0] p_cast34_reg_1621;
wire   [8:0] zext_ln87_fu_487_p1;
reg   [8:0] zext_ln87_reg_1626;
wire   [9:0] add_ln94_1_fu_503_p2;
reg   [9:0] add_ln94_1_reg_1631;
wire   [16:0] add_ln96_fu_509_p2;
reg   [16:0] add_ln96_reg_1636;
wire  signed [31:0] sext_ln121_1_fu_525_p1;
reg  signed [31:0] sext_ln121_1_reg_1641;
wire   [9:0] add_ln190_fu_529_p2;
reg   [9:0] add_ln190_reg_1646;
wire   [0:0] icmp_ln87_fu_535_p2;
wire   [9:0] sub_ln90_fu_612_p2;
reg   [9:0] sub_ln90_reg_1741;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state11_pp0_stage0_iter1;
reg    ap_predicate_op367_write_state11;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tile_first_fu_661_p2;
wire   [0:0] tile_last_fu_667_p2;
wire   [0:0] rhstile_first_fu_678_p2;
wire   [0:0] rhstile_last_fu_693_p2;
wire   [0:0] xor_ln124_1_fu_709_p2;
reg   [0:0] xor_ln124_1_reg_1768;
wire  signed [15:0] grp_fu_1447_p4;
reg  signed [15:0] add_ln301_7_reg_1773;
wire   [0:0] icmp_ln132_1_fu_729_p2;
reg   [0:0] icmp_ln132_1_reg_1778;
reg   [0:0] tmp_5_reg_1783;
wire   [0:0] xor_ln124_fu_745_p2;
reg   [0:0] xor_ln124_reg_1788;
wire  signed [15:0] grp_fu_1456_p4;
reg  signed [15:0] add_ln301_3_reg_1793;
wire   [0:0] icmp_ln132_fu_765_p2;
reg   [0:0] icmp_ln132_reg_1798;
reg   [0:0] tmp_4_reg_1803;
wire   [0:0] xor_ln124_2_fu_781_p2;
reg   [0:0] xor_ln124_2_reg_1808;
wire  signed [15:0] grp_fu_1465_p4;
reg  signed [15:0] add_ln301_11_reg_1813;
wire   [0:0] icmp_ln132_2_fu_801_p2;
reg   [0:0] icmp_ln132_2_reg_1818;
reg   [0:0] tmp_6_reg_1823;
wire   [7:0] select_ln190_9_fu_914_p3;
reg   [7:0] select_ln190_9_reg_1828;
wire   [0:0] icmp_ln163_fu_950_p2;
reg   [0:0] icmp_ln163_reg_1833;
wire   [7:0] select_ln190_4_fu_1071_p3;
reg   [7:0] select_ln190_4_reg_1838;
wire   [7:0] select_ln190_14_fu_1243_p3;
reg   [7:0] select_ln190_14_reg_1843;
wire   [0:0] icmp_ln87_1_fu_1280_p2;
reg   [0:0] icmp_ln87_1_reg_1848;
wire   [31:0] add_ln87_fu_1285_p2;
reg   [31:0] add_ln87_reg_1852;
wire   [127:0] zext_ln414_1_fu_1319_p1;
wire    ap_block_state5_pp0_stage1_iter0;
reg    ap_predicate_op293_write_state5;
reg    ap_predicate_op294_write_state5;
reg    ap_block_state5_io;
wire    ap_block_state12_pp0_stage1_iter1;
reg    ap_predicate_op368_write_state12;
reg    ap_block_state12_io;
reg    ap_block_pp0_stage1_11001;
wire  signed [15:0] grp_fu_1482_p3;
reg  signed [15:0] add_ln301_1_reg_1862;
wire  signed [15:0] grp_fu_1489_p3;
reg  signed [15:0] add_ln301_9_reg_1867;
wire   [127:0] zext_ln414_fu_1384_p1;
wire    ap_block_state6_pp0_stage2_iter0;
reg    ap_predicate_op318_write_state6;
reg    ap_predicate_op320_write_state6;
reg    ap_predicate_op330_write_state6;
reg    ap_predicate_op331_write_state6;
reg    ap_block_state6_io;
reg    ap_block_pp0_stage2_11001;
wire   [0:0] xor_ln301_2_fu_1393_p2;
reg   [0:0] xor_ln301_2_reg_1877;
wire   [127:0] zext_ln414_2_fu_1436_p1;
wire    ap_block_state8_pp0_stage4_iter0;
reg    ap_block_state8_io;
reg    ap_block_pp0_stage4_11001;
wire    ap_block_state10_pp0_stage6_iter0;
reg    ap_predicate_op360_write_state10;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage1_subdone;
reg   [31:0] ap_phi_mux_i_reg2mem_0_phi_fu_187_p4;
reg   [7:0] j_1_fu_126;
reg   [7:0] z2_1_fu_130;
wire   [7:0] select_ln190_8_fu_899_p3;
wire   [7:0] select_ln190_3_fu_1056_p3;
wire   [7:0] select_ln190_13_fu_1228_p3;
reg   [7:0] z1_1_fu_134;
wire   [7:0] select_ln190_7_fu_884_p3;
wire   [7:0] select_ln190_2_fu_1041_p3;
wire   [7:0] select_ln190_12_fu_1213_p3;
reg   [7:0] slice_0_reg2mem_0_fu_138;
wire   [7:0] select_ln190_6_fu_868_p3;
wire   [7:0] select_ln190_1_fu_1025_p3;
wire   [7:0] select_ln190_11_fu_1197_p3;
reg   [15:0] m_0_reg2mem_0_fu_142;
wire   [15:0] select_ln190_5_fu_852_p3;
wire   [15:0] select_ln190_fu_1009_p3;
wire   [15:0] select_ln190_10_fu_1181_p3;
reg   [15:0] rmem_region_offset_0_reg2mem_0_fu_146;
wire   [15:0] select_ln177_1_fu_1128_p3;
reg   [7:0] rmem_region_0_reg2mem_0_fu_150;
wire   [7:0] select_ln177_fu_1120_p3;
reg   [15:0] lmem_region_offset_2_fu_154;
wire   [15:0] lmem_region_offset_3_fu_1344_p3;
reg   [7:0] lmem_region_2_fu_158;
wire   [7:0] lmem_region_3_fu_955_p3;
reg   [7:0] offset_res_0_reg2mem_0_fu_162;
wire   [7:0] select_ln151_fu_1413_p3;
wire    ap_block_pp0_stage1_01001;
wire    ap_block_pp0_stage2_01001;
wire    ap_block_state7_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_01001;
wire    ap_block_pp0_stage4_01001;
wire    ap_block_state9_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_01001;
wire    ap_block_pp0_stage6_01001;
wire    ap_block_pp0_stage0_01001;
reg    ap_predicate_op343_write_state7;
reg    ap_predicate_op345_write_state7;
reg    ap_block_state7_io;
reg    ap_block_pp0_stage3_11001;
reg    ap_predicate_op358_write_state9;
reg    ap_block_state9_io;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_pp0_stage6_11001;
wire  signed [7:0] grp_fu_200_p0;
wire   [31:0] r_fu_654_p2;
wire  signed [7:0] grp_fu_227_p0;
wire   [7:0] grp_fu_232_p2;
wire   [7:0] grp_fu_242_p2;
wire   [0:0] grp_fu_252_p2;
wire   [7:0] grp_fu_257_p2;
wire   [7:0] grp_fu_262_p3;
wire   [15:0] grp_fu_276_p2;
wire   [15:0] ins_in_tiles_n_fu_328_p4;
wire   [5:0] mul_ln87_1_fu_420_p0;
wire   [7:0] mul_ln87_1_fu_420_p1;
wire   [13:0] mul_ln87_2_fu_429_p1;
wire   [0:0] icmp_ln71_fu_437_p2;
wire   [0:0] icmp_ln72_fu_446_p2;
wire   [10:0] zext_ln79_fu_468_p1;
wire   [10:0] lshr_ln79_fu_471_p2;
wire   [6:0] zext_ln87_1_fu_490_p1;
wire   [6:0] add_ln94_fu_493_p2;
wire  signed [9:0] sext_ln94_fu_499_p1;
wire   [16:0] p_cast35_fu_481_p1;
wire  signed [6:0] add_ln121_fu_515_p2;
wire  signed [9:0] sext_ln121_fu_521_p1;
wire  signed [7:0] sext_ln90_fu_604_p0;
wire  signed [7:0] sext_ln90_1_fu_608_p0;
wire  signed [9:0] sext_ln90_1_fu_608_p1;
wire   [31:0] zext_ln91_fu_617_p1;
wire   [15:0] zext_ln91_1_fu_629_p1;
wire  signed [8:0] sext_ln90_fu_604_p1;
wire  signed [8:0] add_ln91_fu_645_p2;
wire  signed [31:0] sext_ln91_fu_650_p1;
wire   [31:0] xor_ln91_fu_633_p2;
wire   [9:0] zext_ln91_3_fu_625_p1;
wire   [0:0] icmp_ln95_fu_672_p2;
wire   [16:0] zext_ln96_fu_684_p1;
wire   [0:0] icmp_ln96_fu_688_p2;
wire   [0:0] grp_fu_200_p2;
wire   [0:0] grp_fu_205_p2;
wire   [0:0] and_ln122_1_fu_699_p2;
wire   [0:0] and_ln123_1_fu_704_p2;
wire   [8:0] zext_ln91_2_fu_621_p1;
wire   [8:0] zext_ln132_1_fu_719_p1;
wire   [8:0] sub_ln132_1_fu_723_p2;
wire   [0:0] and_ln122_fu_735_p2;
wire   [0:0] and_ln123_fu_740_p2;
wire   [8:0] zext_ln132_fu_755_p1;
wire   [8:0] sub_ln132_fu_759_p2;
wire   [0:0] and_ln122_2_fu_771_p2;
wire   [0:0] and_ln123_2_fu_776_p2;
wire   [8:0] zext_ln132_2_fu_791_p1;
wire   [8:0] sub_ln132_2_fu_795_p2;
wire  signed [7:0] grp_fu_227_p2;
wire  signed [8:0] sext_ln185_1_fu_807_p1;
wire   [8:0] zext_ln185_1_fu_811_p1;
wire   [0:0] grp_fu_237_p2;
wire   [7:0] grp_fu_247_p2;
wire   [9:0] zext_ln190_1_fu_829_p1;
wire   [0:0] grp_fu_281_p2;
wire   [0:0] icmp_ln185_1_fu_815_p2;
wire   [0:0] icmp_ln190_1_fu_833_p2;
wire   [0:0] and_ln190_1_fu_846_p2;
wire   [15:0] select_ln196_1_fu_838_p3;
wire   [7:0] select_ln185_4_fu_860_p3;
wire   [7:0] select_ln187_1_fu_821_p3;
wire   [7:0] select_ln185_5_fu_876_p3;
wire   [7:0] select_ln185_6_fu_891_p3;
wire   [7:0] grp_fu_270_p2;
wire   [7:0] select_ln185_7_fu_906_p3;
wire   [7:0] lmem_region_fu_944_p2;
wire  signed [8:0] sext_ln185_fu_964_p1;
wire   [8:0] zext_ln185_fu_968_p1;
wire   [9:0] zext_ln190_fu_986_p1;
wire   [0:0] icmp_ln185_fu_972_p2;
wire   [0:0] icmp_ln190_fu_990_p2;
wire   [0:0] and_ln190_fu_1003_p2;
wire   [15:0] select_ln196_fu_995_p3;
wire   [7:0] select_ln185_fu_1017_p3;
wire   [7:0] select_ln187_fu_978_p3;
wire   [7:0] select_ln185_1_fu_1033_p3;
wire   [7:0] select_ln185_2_fu_1048_p3;
wire   [7:0] select_ln185_3_fu_1063_p3;
wire   [7:0] rmem_region_fu_1104_p2;
wire   [0:0] icmp_ln177_fu_1115_p2;
wire   [15:0] rmem_region_offset_fu_1110_p2;
wire  signed [8:0] sext_ln185_2_fu_1136_p1;
wire   [8:0] zext_ln185_2_fu_1140_p1;
wire   [9:0] zext_ln190_2_fu_1158_p1;
wire   [0:0] icmp_ln185_2_fu_1144_p2;
wire   [0:0] icmp_ln190_2_fu_1162_p2;
wire   [0:0] and_ln190_2_fu_1175_p2;
wire   [15:0] select_ln196_2_fu_1167_p3;
wire   [7:0] select_ln185_8_fu_1189_p3;
wire   [7:0] select_ln187_2_fu_1150_p3;
wire   [7:0] select_ln185_9_fu_1205_p3;
wire   [7:0] select_ln185_10_fu_1220_p3;
wire   [7:0] select_ln185_11_fu_1235_p3;
wire  signed [9:0] grp_fu_296_p2;
wire   [0:0] trunc_ln301_1_fu_1295_p1;
wire   [0:0] xor_ln301_1_fu_1299_p2;
wire  signed [15:0] grp_fu_1474_p3;
wire   [123:0] tmp_i1_fu_1304_p10;
wire   [15:0] lmem_region_offset_fu_1339_p2;
wire   [0:0] trunc_ln301_fu_1360_p1;
wire   [0:0] xor_ln301_fu_1364_p2;
wire   [123:0] tmp_i_fu_1369_p10;
wire   [0:0] trunc_ln301_2_fu_1389_p1;
wire   [7:0] offset_res_fu_1401_p2;
wire   [0:0] icmp_ln151_fu_1407_p2;
wire   [123:0] tmp_i2_fu_1422_p10;
wire   [15:0] mul_ln87_fu_1441_p0;
wire   [15:0] mul_ln87_fu_1441_p1;
wire   [15:0] xor_ln91_1_fu_639_p2;
(* use_dsp48 = "no" *) wire   [15:0] grp_fu_209_p2;
(* use_dsp48 = "no" *) wire   [15:0] grp_fu_301_p2;
wire    ap_CS_fsm_state13;
reg    ap_block_state13;
reg   [10:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [13:0] mul_ln87_1_fu_420_p00;
wire   [13:0] mul_ln87_1_fu_420_p10;
wire   [31:0] mul_ln87_2_fu_429_p10;
wire   [31:0] mul_ln87_fu_1441_p00;
wire   [31:0] mul_ln87_fu_1441_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 in_V_V_0_sel_rd = 1'b0;
#0 in_V_V_0_sel_wr = 1'b0;
#0 in_V_V_0_state = 2'd0;
#0 out_V_V_1_sel_rd = 1'b0;
#0 out_V_V_1_sel_wr = 1'b0;
#0 out_V_V_1_state = 2'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

ExecInstrGen_mul_mul_16ns_16ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
ExecInstrGen_mul_mul_16ns_16ns_32_1_1_U1(
    .din0(mul_ln87_fu_1441_p0),
    .din1(mul_ln87_fu_1441_p1),
    .dout(mul_ln87_fu_1441_p2)
);

ExecInstrGen_ama_addmuladd_16ns_9s_16s_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
ExecInstrGen_ama_addmuladd_16ns_9s_16s_16ns_16_1_1_U2(
    .din0(xor_ln91_1_fu_639_p2),
    .din1(add_ln91_fu_645_p2),
    .din2(exec_numTiles_V_reg_1507),
    .din3(grp_fu_209_p2),
    .dout(grp_fu_1447_p4)
);

ExecInstrGen_ama_addmuladd_16ns_9s_16s_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
ExecInstrGen_ama_addmuladd_16ns_9s_16s_16ns_16_1_1_U3(
    .din0(xor_ln91_1_fu_639_p2),
    .din1(add_ln91_fu_645_p2),
    .din2(exec_numTiles_V_reg_1507),
    .din3(grp_fu_209_p2),
    .dout(grp_fu_1456_p4)
);

ExecInstrGen_ama_addmuladd_16ns_9s_16s_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
ExecInstrGen_ama_addmuladd_16ns_9s_16s_16ns_16_1_1_U4(
    .din0(xor_ln91_1_fu_639_p2),
    .din1(add_ln91_fu_645_p2),
    .din2(exec_numTiles_V_reg_1507),
    .din3(grp_fu_209_p2),
    .dout(grp_fu_1465_p4)
);

ExecInstrGen_mac_muladd_16s_10s_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
ExecInstrGen_mac_muladd_16s_10s_16ns_16_1_1_U5(
    .din0(exec_numTiles_V_reg_1507),
    .din1(grp_fu_296_p2),
    .din2(grp_fu_301_p2),
    .dout(grp_fu_1474_p3)
);

ExecInstrGen_mac_muladd_16s_10s_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
ExecInstrGen_mac_muladd_16s_10s_16ns_16_1_1_U6(
    .din0(exec_numTiles_V_reg_1507),
    .din1(grp_fu_296_p2),
    .din2(grp_fu_301_p2),
    .dout(grp_fu_1482_p3)
);

ExecInstrGen_mac_muladd_16s_10s_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
ExecInstrGen_mac_muladd_16s_10s_16ns_16_1_1_U7(
    .din0(exec_numTiles_V_reg_1507),
    .din1(grp_fu_296_p2),
    .din2(grp_fu_301_p2),
    .dout(grp_fu_1489_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((icmp_ln87_1_reg_1848 == 1'd1) & (1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln87_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln87_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        in_V_V_0_sel_rd <= 1'b0;
    end else begin
        if (((in_V_V_0_ack_out == 1'b1) & (in_V_V_0_vld_out == 1'b1))) begin
            in_V_V_0_sel_rd <= ~in_V_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        in_V_V_0_sel_wr <= 1'b0;
    end else begin
        if (((in_V_V_0_ack_in == 1'b1) & (in_V_V_0_vld_in == 1'b1))) begin
            in_V_V_0_sel_wr <= ~in_V_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        in_V_V_0_state <= 2'd0;
    end else begin
        if ((((in_V_V_0_state == 2'd2) & (in_V_V_0_vld_in == 1'b0)) | ((in_V_V_0_state == 2'd3) & (in_V_V_0_vld_in == 1'b0) & (in_V_V_0_ack_out == 1'b1)))) begin
            in_V_V_0_state <= 2'd2;
        end else if ((((in_V_V_0_state == 2'd1) & (in_V_V_0_ack_out == 1'b0)) | ((in_V_V_0_state == 2'd3) & (in_V_V_0_ack_out == 1'b0) & (in_V_V_0_vld_in == 1'b1)))) begin
            in_V_V_0_state <= 2'd1;
        end else if (((~((in_V_V_0_vld_in == 1'b0) & (in_V_V_0_ack_out == 1'b1)) & ~((in_V_V_0_ack_out == 1'b0) & (in_V_V_0_vld_in == 1'b1)) & (in_V_V_0_state == 2'd3)) | ((in_V_V_0_state == 2'd1) & (in_V_V_0_ack_out == 1'b1)) | ((in_V_V_0_state == 2'd2) & (in_V_V_0_vld_in == 1'b1)))) begin
            in_V_V_0_state <= 2'd3;
        end else begin
            in_V_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        out_V_V_1_sel_rd <= 1'b0;
    end else begin
        if (((out_V_V_1_ack_out == 1'b1) & (out_V_V_1_vld_out == 1'b1))) begin
            out_V_V_1_sel_rd <= ~out_V_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        out_V_V_1_sel_wr <= 1'b0;
    end else begin
        if (((out_V_V_1_ack_in == 1'b1) & (out_V_V_1_vld_in == 1'b1))) begin
            out_V_V_1_sel_wr <= ~out_V_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        out_V_V_1_state <= 2'd0;
    end else begin
        if ((((out_V_V_1_state == 2'd2) & (out_V_V_1_vld_in == 1'b0)) | ((out_V_V_1_state == 2'd3) & (out_V_V_1_vld_in == 1'b0) & (out_V_V_1_ack_out == 1'b1)))) begin
            out_V_V_1_state <= 2'd2;
        end else if ((((out_V_V_1_state == 2'd1) & (out_V_V_TREADY == 1'b0)) | ((out_V_V_1_state == 2'd3) & (out_V_V_TREADY == 1'b0) & (out_V_V_1_vld_in == 1'b1)))) begin
            out_V_V_1_state <= 2'd1;
        end else if (((~((out_V_V_1_vld_in == 1'b0) & (out_V_V_1_ack_out == 1'b1)) & ~((out_V_V_TREADY == 1'b0) & (out_V_V_1_vld_in == 1'b1)) & (out_V_V_1_state == 2'd3)) | ((out_V_V_1_state == 2'd1) & (out_V_V_1_ack_out == 1'b1)) | ((out_V_V_1_state == 2'd2) & (out_V_V_1_vld_in == 1'b1)))) begin
            out_V_V_1_state <= 2'd3;
        end else begin
            out_V_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg2mem_0_reg_183 <= 32'd1;
    end else if (((icmp_ln87_1_reg_1848 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg2mem_0_reg_183 <= add_ln87_reg_1852;
    end
end

always @ (posedge ap_clk) begin
    if (((rhstile_last_reg_1764 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_1_fu_126 <= select_ln190_14_reg_1843;
    end else if (((tile_last_reg_1753 == 1'd1) & (rhstile_last_reg_1764 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_1_fu_126 <= select_ln190_4_reg_1838;
    end else if (((rhstile_last_reg_1764 == 1'd0) & (tile_last_reg_1753 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_1_fu_126 <= select_ln190_9_reg_1828;
    end else if (((icmp_ln87_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        j_1_fu_126 <= j_fu_455_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((rhstile_last_fu_693_p2 == 1'd1) & (tile_last_fu_667_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tile_last_fu_667_p2 == 1'd1) & (rhstile_last_fu_693_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        lmem_region_2_fu_158 <= lmem_region_3_fu_955_p3;
    end else if (((icmp_ln87_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        lmem_region_2_fu_158 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((tile_last_reg_1753 == 1'd1) & (rhstile_last_reg_1764 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((rhstile_last_reg_1764 == 1'd1) & (tile_last_reg_1753 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        lmem_region_offset_2_fu_154 <= lmem_region_offset_3_fu_1344_p3;
    end else if (((icmp_ln87_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        lmem_region_offset_2_fu_154 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((rhstile_last_fu_693_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_0_reg2mem_0_fu_142 <= select_ln190_10_fu_1181_p3;
    end else if (((tile_last_fu_667_p2 == 1'd1) & (rhstile_last_fu_693_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_0_reg2mem_0_fu_142 <= select_ln190_fu_1009_p3;
    end else if (((rhstile_last_fu_693_p2 == 1'd0) & (tile_last_fu_667_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_0_reg2mem_0_fu_142 <= select_ln190_5_fu_852_p3;
    end else if (((icmp_ln87_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        m_0_reg2mem_0_fu_142 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((tile_last_reg_1753 == 1'd1) & (rhstile_last_reg_1764 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((rhstile_last_reg_1764 == 1'd1) & (tile_last_reg_1753 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        offset_res_0_reg2mem_0_fu_162 <= select_ln151_fu_1413_p3;
    end else if (((icmp_ln87_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        offset_res_0_reg2mem_0_fu_162 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((rhstile_last_fu_693_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        rmem_region_0_reg2mem_0_fu_150 <= select_ln177_fu_1120_p3;
    end else if (((icmp_ln87_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        rmem_region_0_reg2mem_0_fu_150 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((rhstile_last_fu_693_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        rmem_region_offset_0_reg2mem_0_fu_146 <= select_ln177_1_fu_1128_p3;
    end else if (((icmp_ln87_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        rmem_region_offset_0_reg2mem_0_fu_146 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((rhstile_last_fu_693_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        slice_0_reg2mem_0_fu_138 <= select_ln190_11_fu_1197_p3;
    end else if (((tile_last_fu_667_p2 == 1'd1) & (rhstile_last_fu_693_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        slice_0_reg2mem_0_fu_138 <= select_ln190_1_fu_1025_p3;
    end else if (((rhstile_last_fu_693_p2 == 1'd0) & (tile_last_fu_667_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        slice_0_reg2mem_0_fu_138 <= select_ln190_6_fu_868_p3;
    end else if (((icmp_ln87_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        slice_0_reg2mem_0_fu_138 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((rhstile_last_fu_693_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        z1_1_fu_134 <= select_ln190_12_fu_1213_p3;
    end else if (((tile_last_fu_667_p2 == 1'd1) & (rhstile_last_fu_693_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        z1_1_fu_134 <= select_ln190_2_fu_1041_p3;
    end else if (((rhstile_last_fu_693_p2 == 1'd0) & (tile_last_fu_667_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        z1_1_fu_134 <= select_ln190_7_fu_884_p3;
    end else if (((icmp_ln87_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        z1_1_fu_134 <= z1_fu_442_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((rhstile_last_fu_693_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        z2_1_fu_130 <= select_ln190_13_fu_1228_p3;
    end else if (((tile_last_fu_667_p2 == 1'd1) & (rhstile_last_fu_693_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        z2_1_fu_130 <= select_ln190_3_fu_1056_p3;
    end else if (((rhstile_last_fu_693_p2 == 1'd0) & (tile_last_fu_667_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        z2_1_fu_130 <= select_ln190_8_fu_899_p3;
    end else if (((icmp_ln87_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        z2_1_fu_130 <= z2_fu_451_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln190_reg_1646 <= add_ln190_fu_529_p2;
        add_ln94_1_reg_1631 <= add_ln94_1_fu_503_p2;
        add_ln96_reg_1636 <= add_ln96_fu_509_p2;
        ins_in_bits_r_reg_1582[5 : 0] <= ins_in_bits_r_fu_434_p1[5 : 0];
        j_reg_1602 <= j_fu_455_p3;
        lmem_num_regions_reg_1609 <= lmem_num_regions_fu_463_p2;
        lmem_region_size_reg_1615[10 : 0] <= lmem_region_size_fu_477_p1[10 : 0];
        p_cast34_reg_1621[7 : 0] <= p_cast34_fu_484_p1[7 : 0];
        sext_ln121_1_reg_1641 <= sext_ln121_1_fu_525_p1;
        z1_reg_1588[0] <= z1_fu_442_p1[0];
        z2_reg_1595[0] <= z2_fu_451_p1[0];
        zext_ln87_reg_1626[5 : 0] <= zext_ln87_fu_487_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tile_first_fu_661_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln301_11_reg_1813 <= grp_fu_1465_p4;
        tmp_6_reg_1823 <= tmp_V_reg_1496[32'd96];
    end
end

always @ (posedge ap_clk) begin
    if (((rhstile_first_reg_1760 == 1'd1) & (tile_first_reg_1746 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln301_1_reg_1862 <= grp_fu_1482_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((rhstile_first_fu_678_p2 == 1'd1) & (tile_first_fu_661_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln301_3_reg_1793 <= grp_fu_1456_p4;
        tmp_4_reg_1803 <= tmp_V_reg_1496[32'd96];
    end
end

always @ (posedge ap_clk) begin
    if (((rhstile_first_fu_678_p2 == 1'd0) & (tile_first_fu_661_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln301_7_reg_1773 <= grp_fu_1447_p4;
        tmp_5_reg_1783 <= tmp_V_reg_1496[32'd96];
    end
end

always @ (posedge ap_clk) begin
    if (((tile_first_reg_1746 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln301_9_reg_1867 <= grp_fu_1489_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln87_reg_1852 <= add_ln87_fu_1285_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_V_V_0_vld_out == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        exec_numTiles_V_reg_1507 <= {{in_V_V_0_data_out[31:16]}};
        ins_in_base_l_reg_1550 <= {{in_V_V_0_data_out[79:64]}};
        ins_in_base_r_reg_1555 <= {{in_V_V_0_data_out[95:80]}};
        ins_in_bits_l_reg_1520 <= {{in_V_V_0_data_out[55:48]}};
        ins_in_nbufs_fetch_exec_log2_reg_1560 <= {{in_V_V_0_data_out[111:104]}};
        ins_in_signed_l_reg_1536 <= in_V_V_0_data_out[32'd62];
        ins_in_signed_r_reg_1543 <= in_V_V_0_data_out[32'd63];
        ins_in_tiles_m_reg_1501 <= ins_in_tiles_m_fu_314_p1;
        mul_ln87_1_reg_1571 <= mul_ln87_1_fu_420_p2;
        mul_ln87_reg_1566 <= mul_ln87_fu_1441_p2;
        p_Result_4_i_reg_1528 <= {{in_V_V_0_data_out[61:56]}};
        tmp_V_reg_1496 <= in_V_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((rhstile_first_fu_678_p2 == 1'd0) & (tile_first_fu_661_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln132_1_reg_1778 <= icmp_ln132_1_fu_729_p2;
        xor_ln124_1_reg_1768 <= xor_ln124_1_fu_709_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tile_first_fu_661_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln132_2_reg_1818 <= icmp_ln132_2_fu_801_p2;
        xor_ln124_2_reg_1808 <= xor_ln124_2_fu_781_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((rhstile_first_fu_678_p2 == 1'd1) & (tile_first_fu_661_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln132_reg_1798 <= icmp_ln132_fu_765_p2;
        xor_ln124_reg_1788 <= xor_ln124_fu_745_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tile_last_fu_667_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln163_reg_1833 <= icmp_ln163_fu_950_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln87_1_reg_1848 <= icmp_ln87_1_fu_1280_p2;
        rhstile_first_reg_1760 <= rhstile_first_fu_678_p2;
        rhstile_last_reg_1764 <= rhstile_last_fu_693_p2;
        rhstile_last_reg_1764_pp0_iter1_reg <= rhstile_last_reg_1764;
        sub_ln90_reg_1741 <= sub_ln90_fu_612_p2;
        tile_first_reg_1746 <= tile_first_fu_661_p2;
        tile_last_reg_1753 <= tile_last_fu_667_p2;
        tile_last_reg_1753_pp0_iter1_reg <= tile_last_reg_1753;
    end
end

always @ (posedge ap_clk) begin
    if ((in_V_V_0_load_A == 1'b1)) begin
        in_V_V_0_payload_A <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((in_V_V_0_load_B == 1'b1)) begin
        in_V_V_0_payload_B <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mul_ln87_2_reg_1576 <= mul_ln87_2_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((out_V_V_1_load_A == 1'b1)) begin
        out_V_V_1_payload_A <= out_V_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((out_V_V_1_load_B == 1'b1)) begin
        out_V_V_1_payload_B <= out_V_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((rhstile_last_fu_693_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln190_14_reg_1843 <= select_ln190_14_fu_1243_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tile_last_fu_667_p2 == 1'd1) & (rhstile_last_fu_693_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln190_4_reg_1838 <= select_ln190_4_fu_1071_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((rhstile_last_fu_693_p2 == 1'd0) & (tile_last_fu_667_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln190_9_reg_1828 <= select_ln190_9_fu_914_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tile_first_reg_1746 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        xor_ln301_2_reg_1877 <= xor_ln301_2_fu_1393_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | (~((out_V_V_1_state == 2'd1) | ((out_V_V_1_state == 2'd3) & (out_V_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state13)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_1_reg_1848 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_reg2mem_0_phi_fu_187_p4 = add_ln87_reg_1852;
    end else begin
        ap_phi_mux_i_reg2mem_0_phi_fu_187_p4 = i_reg2mem_0_reg_183;
    end
end

always @ (*) begin
    if ((~((out_V_V_1_state == 2'd1) | ((out_V_V_1_state == 2'd3) & (out_V_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((in_V_V_0_vld_out == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_V_V_0_ack_out = 1'b1;
    end else begin
        in_V_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((in_V_V_0_sel == 1'b1)) begin
        in_V_V_0_data_out = in_V_V_0_payload_B;
    end else begin
        in_V_V_0_data_out = in_V_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        in_V_V_TDATA_blk_n = in_V_V_0_state[1'd0];
    end else begin
        in_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_01001) & (tile_last_reg_1753 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        out_V_V_1_data_in = 128'd25;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op367_write_state11 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_01001) & (tile_last_reg_1753 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_01001) & (rhstile_last_reg_1764 == 1'd1) & (tile_last_reg_1753 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        out_V_V_1_data_in = 128'd9;
    end else if (((1'b0 == ap_block_pp0_stage4_01001) & (tile_first_reg_1746 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        out_V_V_1_data_in = zext_ln414_2_fu_1436_p1;
    end else if (((1'b0 == ap_block_pp0_stage3_01001) & (tile_first_reg_1746 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        out_V_V_1_data_in = 128'd17;
    end else if (((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op330_write_state6 == 1'b1))) begin
        out_V_V_1_data_in = zext_ln414_fu_1384_p1;
    end else if ((((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op331_write_state6 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op294_write_state5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_01001) & (rhstile_first_reg_1760 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        out_V_V_1_data_in = 128'd1;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op293_write_state5 == 1'b1))) begin
        out_V_V_1_data_in = zext_ln414_1_fu_1319_p1;
    end else begin
        out_V_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((out_V_V_1_sel == 1'b1)) begin
        out_V_V_1_data_out = out_V_V_1_payload_B;
    end else begin
        out_V_V_1_data_out = out_V_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op367_write_state11 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (tile_last_reg_1753 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op358_write_state9 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (tile_last_reg_1753 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tile_first_reg_1746 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (tile_first_reg_1746 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op331_write_state6 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op330_write_state6 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op294_write_state5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op293_write_state5 == 1'b1)) | ((rhstile_first_reg_1760 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        out_V_V_1_vld_in = 1'b1;
    end else begin
        out_V_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((rhstile_last_reg_1764 == 1'd1) & (tile_last_reg_1753 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tile_last_reg_1753 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((rhstile_last_reg_1764 == 1'd1) & (tile_last_reg_1753 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tile_last_reg_1753 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((rhstile_last_reg_1764 == 1'd1) & (tile_last_reg_1753 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tile_last_reg_1753 == 1'd1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tile_first_reg_1746 == 1'd1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tile_first_reg_1746 == 1'd1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tile_first_reg_1746 == 1'd1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tile_first_reg_1746 == 1'd0) & (rhstile_first_reg_1760 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((tile_first_reg_1746 == 1'd1) & (rhstile_first_reg_1760 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((rhstile_first_reg_1760 == 1'd1) & (tile_first_reg_1746 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tile_first_reg_1746 == 1'd1) & (rhstile_first_reg_1760 == 1'd1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((rhstile_first_reg_1760 == 1'd1) & (tile_first_reg_1746 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((tile_first_reg_1746 == 1'd1) & (rhstile_first_reg_1760 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((rhstile_first_reg_1760 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((rhstile_last_reg_1764_pp0_iter1_reg == 1'd1) & (tile_last_reg_1753_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((tile_first_reg_1746 == 1'd0) & (rhstile_first_reg_1760 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((tile_first_reg_1746 == 1'd1) & (rhstile_first_reg_1760 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((rhstile_first_reg_1760 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        out_V_V_TDATA_blk_n = out_V_V_1_state[1'd1];
    end else begin
        out_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((in_V_V_0_vld_out == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln87_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_state13 : begin
            if ((~((out_V_V_1_state == 2'd1) | ((out_V_V_1_state == 2'd3) & (out_V_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln121_fu_515_p2 = ($signed(7'd127) + $signed(zext_ln87_1_fu_490_p1));

assign add_ln190_fu_529_p2 = ($signed(p_cast34_fu_484_p1) + $signed(sext_ln121_fu_521_p1));

assign add_ln87_fu_1285_p2 = (ap_phi_mux_i_reg2mem_0_phi_fu_187_p4 + 32'd1);

assign add_ln91_fu_645_p2 = ($signed(sext_ln90_fu_604_p1) + $signed(zext_ln87_reg_1626));

assign add_ln94_1_fu_503_p2 = ($signed(p_cast34_fu_484_p1) + $signed(sext_ln94_fu_499_p1));

assign add_ln94_fu_493_p2 = ($signed(7'd126) + $signed(zext_ln87_1_fu_490_p1));

assign add_ln96_fu_509_p2 = ($signed(17'd131071) + $signed(p_cast35_fu_481_p1));

assign and_ln122_1_fu_699_p2 = (ins_in_signed_l_reg_1536 & grp_fu_200_p2);

assign and_ln122_2_fu_771_p2 = (ins_in_signed_l_reg_1536 & grp_fu_200_p2);

assign and_ln122_fu_735_p2 = (ins_in_signed_l_reg_1536 & grp_fu_200_p2);

assign and_ln123_1_fu_704_p2 = (ins_in_signed_r_reg_1543 & grp_fu_205_p2);

assign and_ln123_2_fu_776_p2 = (ins_in_signed_r_reg_1543 & grp_fu_205_p2);

assign and_ln123_fu_740_p2 = (ins_in_signed_r_reg_1543 & grp_fu_205_p2);

assign and_ln190_1_fu_846_p2 = (icmp_ln190_1_fu_833_p2 & icmp_ln185_1_fu_815_p2);

assign and_ln190_2_fu_1175_p2 = (icmp_ln190_2_fu_1162_p2 & icmp_ln185_2_fu_1144_p2);

assign and_ln190_fu_1003_p2 = (icmp_ln190_fu_990_p2 & icmp_ln185_fu_972_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state11_io));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state11_io));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state12_io)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state12_io)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state9_io));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state9_io));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state10_io));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state10_io));
end

always @ (*) begin
    ap_block_state1 = ((in_V_V_0_vld_out == 1'b0) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_io = (((out_V_V_1_ack_in == 1'b0) & (ap_predicate_op360_write_state10 == 1'b1)) | ((tile_last_reg_1753 == 1'd1) & (out_V_V_1_ack_in == 1'b0)));
end

assign ap_block_state10_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = (((out_V_V_1_ack_in == 1'b0) & (ap_predicate_op367_write_state11 == 1'b1)) | ((tile_last_reg_1753 == 1'd1) & (out_V_V_1_ack_in == 1'b0)));
end

assign ap_block_state11_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_io = ((out_V_V_1_ack_in == 1'b0) & (ap_predicate_op368_write_state12 == 1'b1));
end

assign ap_block_state12_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13 = ((out_V_V_1_state == 2'd1) | ((out_V_V_1_state == 2'd3) & (out_V_V_TREADY == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = (((out_V_V_1_ack_in == 1'b0) & (ap_predicate_op294_write_state5 == 1'b1)) | ((out_V_V_1_ack_in == 1'b0) & (ap_predicate_op293_write_state5 == 1'b1)) | ((rhstile_first_reg_1760 == 1'd1) & (out_V_V_1_ack_in == 1'b0)));
end

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = (((out_V_V_1_ack_in == 1'b0) & (ap_predicate_op331_write_state6 == 1'b1)) | ((out_V_V_1_ack_in == 1'b0) & (ap_predicate_op330_write_state6 == 1'b1)) | ((out_V_V_1_ack_in == 1'b0) & (ap_predicate_op320_write_state6 == 1'b1)) | ((out_V_V_1_ack_in == 1'b0) & (ap_predicate_op318_write_state6 == 1'b1)) | ((rhstile_first_reg_1760 == 1'd1) & (out_V_V_1_ack_in == 1'b0)));
end

assign ap_block_state6_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = (((out_V_V_1_ack_in == 1'b0) & (ap_predicate_op345_write_state7 == 1'b1)) | ((out_V_V_1_ack_in == 1'b0) & (ap_predicate_op343_write_state7 == 1'b1)) | ((tile_first_reg_1746 == 1'd1) & (out_V_V_1_ack_in == 1'b0)));
end

assign ap_block_state7_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((tile_first_reg_1746 == 1'd1) & (out_V_V_1_ack_in == 1'b0));
end

assign ap_block_state8_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = (((out_V_V_1_ack_in == 1'b0) & (ap_predicate_op358_write_state9 == 1'b1)) | ((tile_last_reg_1753 == 1'd1) & (out_V_V_1_ack_in == 1'b0)) | ((tile_first_reg_1746 == 1'd1) & (out_V_V_1_ack_in == 1'b0)));
end

assign ap_block_state9_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op293_write_state5 = ((tile_first_reg_1746 == 1'd0) & (rhstile_first_reg_1760 == 1'd0));
end

always @ (*) begin
    ap_predicate_op294_write_state5 = ((tile_first_reg_1746 == 1'd1) & (rhstile_first_reg_1760 == 1'd0));
end

always @ (*) begin
    ap_predicate_op318_write_state6 = ((tile_first_reg_1746 == 1'd0) & (rhstile_first_reg_1760 == 1'd0));
end

always @ (*) begin
    ap_predicate_op320_write_state6 = ((tile_first_reg_1746 == 1'd1) & (rhstile_first_reg_1760 == 1'd0));
end

always @ (*) begin
    ap_predicate_op330_write_state6 = ((rhstile_first_reg_1760 == 1'd1) & (tile_first_reg_1746 == 1'd0));
end

always @ (*) begin
    ap_predicate_op331_write_state6 = ((tile_first_reg_1746 == 1'd1) & (rhstile_first_reg_1760 == 1'd1));
end

always @ (*) begin
    ap_predicate_op343_write_state7 = ((rhstile_first_reg_1760 == 1'd1) & (tile_first_reg_1746 == 1'd0));
end

always @ (*) begin
    ap_predicate_op345_write_state7 = ((tile_first_reg_1746 == 1'd1) & (rhstile_first_reg_1760 == 1'd1));
end

always @ (*) begin
    ap_predicate_op358_write_state9 = ((rhstile_last_reg_1764 == 1'd1) & (tile_last_reg_1753 == 1'd0));
end

always @ (*) begin
    ap_predicate_op360_write_state10 = ((rhstile_last_reg_1764 == 1'd1) & (tile_last_reg_1753 == 1'd0));
end

always @ (*) begin
    ap_predicate_op367_write_state11 = ((rhstile_last_reg_1764 == 1'd1) & (tile_last_reg_1753 == 1'd1));
end

always @ (*) begin
    ap_predicate_op368_write_state12 = ((rhstile_last_reg_1764_pp0_iter1_reg == 1'd1) & (tile_last_reg_1753_pp0_iter1_reg == 1'd1));
end

assign grp_fu_200_p0 = j_1_fu_126;

assign grp_fu_200_p2 = ((grp_fu_200_p0 == 8'd0) ? 1'b1 : 1'b0);

assign grp_fu_205_p2 = ((r_fu_654_p2 == sext_ln121_1_reg_1641) ? 1'b1 : 1'b0);

assign grp_fu_209_p2 = (rmem_region_offset_0_reg2mem_0_fu_146 + ins_in_base_r_reg_1555);

assign grp_fu_227_p0 = j_1_fu_126;

assign grp_fu_227_p2 = ($signed(grp_fu_227_p0) + $signed(8'd255));

assign grp_fu_232_p2 = (slice_0_reg2mem_0_fu_138 + 8'd1);

assign grp_fu_237_p2 = ((grp_fu_232_p2 < ins_in_bits_r_reg_1582) ? 1'b1 : 1'b0);

assign grp_fu_242_p2 = (slice_0_reg2mem_0_fu_138 + 8'd2);

assign grp_fu_247_p2 = (grp_fu_242_p2 - ins_in_bits_r_reg_1582);

assign grp_fu_252_p2 = ((grp_fu_232_p2 < ins_in_bits_l_reg_1520) ? 1'b1 : 1'b0);

assign grp_fu_257_p2 = (grp_fu_242_p2 - ins_in_bits_l_reg_1520);

assign grp_fu_262_p3 = ((grp_fu_252_p2[0:0] === 1'b1) ? 8'd0 : grp_fu_257_p2);

assign grp_fu_270_p2 = (grp_fu_232_p2 - grp_fu_262_p3);

assign grp_fu_276_p2 = (m_0_reg2mem_0_fu_142 + 16'd1);

assign grp_fu_281_p2 = ((grp_fu_276_p2 == ins_in_tiles_m_reg_1501) ? 1'b1 : 1'b0);

assign grp_fu_296_p2 = ($signed(10'd1023) + $signed(sub_ln90_reg_1741));

assign grp_fu_301_p2 = (lmem_region_offset_2_fu_154 + ins_in_base_l_reg_1550);

assign icmp_ln132_1_fu_729_p2 = ((sext_ln90_fu_604_p1 == sub_ln132_1_fu_723_p2) ? 1'b1 : 1'b0);

assign icmp_ln132_2_fu_801_p2 = ((sext_ln90_fu_604_p1 == sub_ln132_2_fu_795_p2) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_765_p2 = ((sext_ln90_fu_604_p1 == sub_ln132_fu_759_p2) ? 1'b1 : 1'b0);

assign icmp_ln151_fu_1407_p2 = ((offset_res_fu_1401_p2 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln163_fu_950_p2 = ((lmem_region_fu_944_p2 == lmem_num_regions_reg_1609) ? 1'b1 : 1'b0);

assign icmp_ln177_fu_1115_p2 = ((rmem_region_fu_1104_p2 == lmem_num_regions_reg_1609) ? 1'b1 : 1'b0);

assign icmp_ln185_1_fu_815_p2 = (($signed(sext_ln185_1_fu_807_p1) < $signed(zext_ln185_1_fu_811_p1)) ? 1'b1 : 1'b0);

assign icmp_ln185_2_fu_1144_p2 = (($signed(sext_ln185_2_fu_1136_p1) < $signed(zext_ln185_2_fu_1140_p1)) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_972_p2 = (($signed(sext_ln185_fu_964_p1) < $signed(zext_ln185_fu_968_p1)) ? 1'b1 : 1'b0);

assign icmp_ln190_1_fu_833_p2 = ((zext_ln190_1_fu_829_p1 == add_ln190_reg_1646) ? 1'b1 : 1'b0);

assign icmp_ln190_2_fu_1162_p2 = ((zext_ln190_2_fu_1158_p1 == add_ln190_reg_1646) ? 1'b1 : 1'b0);

assign icmp_ln190_fu_990_p2 = ((zext_ln190_fu_986_p1 == add_ln190_reg_1646) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_437_p2 = ((p_Result_4_i_reg_1528 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_446_p2 = ((ins_in_bits_l_reg_1520 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln87_1_fu_1280_p2 = ((ap_phi_mux_i_reg2mem_0_phi_fu_187_p4 == mul_ln87_2_reg_1576) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_535_p2 = ((mul_ln87_2_reg_1576 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_672_p2 = ((m_0_reg2mem_0_fu_142 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_688_p2 = ((zext_ln96_fu_684_p1 == add_ln96_reg_1636) ? 1'b1 : 1'b0);

assign in_V_V_0_ack_in = in_V_V_0_state[1'd1];

assign in_V_V_0_load_A = (in_V_V_0_state_cmp_full & ~in_V_V_0_sel_wr);

assign in_V_V_0_load_B = (in_V_V_0_state_cmp_full & in_V_V_0_sel_wr);

assign in_V_V_0_sel = in_V_V_0_sel_rd;

assign in_V_V_0_state_cmp_full = ((in_V_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign in_V_V_0_vld_in = in_V_V_TVALID;

assign in_V_V_0_vld_out = in_V_V_0_state[1'd0];

assign in_V_V_TREADY = in_V_V_0_state[1'd1];

assign ins_in_bits_l_fu_338_p4 = {{in_V_V_0_data_out[55:48]}};

assign ins_in_bits_r_fu_434_p1 = p_Result_4_i_reg_1528;

assign ins_in_tiles_m_fu_314_p1 = in_V_V_0_data_out[15:0];

assign ins_in_tiles_n_fu_328_p4 = {{in_V_V_0_data_out[47:32]}};

assign j_fu_455_p3 = ((icmp_ln72_fu_446_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign lmem_num_regions_fu_463_p2 = 8'd1 << ins_in_nbufs_fetch_exec_log2_reg_1560;

assign lmem_region_3_fu_955_p3 = ((icmp_ln163_fu_950_p2[0:0] === 1'b1) ? 8'd0 : lmem_region_fu_944_p2);

assign lmem_region_fu_944_p2 = (lmem_region_2_fu_158 + 8'd1);

assign lmem_region_offset_3_fu_1344_p3 = ((icmp_ln163_reg_1833[0:0] === 1'b1) ? 16'd0 : lmem_region_offset_fu_1339_p2);

assign lmem_region_offset_fu_1339_p2 = (lmem_region_size_reg_1615 + lmem_region_offset_2_fu_154);

assign lmem_region_size_fu_477_p1 = lshr_ln79_fu_471_p2;

assign lshr_ln79_fu_471_p2 = 11'd1024 >> zext_ln79_fu_468_p1;

assign mul_ln87_1_fu_420_p0 = mul_ln87_1_fu_420_p00;

assign mul_ln87_1_fu_420_p00 = p_Result_4_i_fu_348_p4;

assign mul_ln87_1_fu_420_p1 = mul_ln87_1_fu_420_p10;

assign mul_ln87_1_fu_420_p10 = ins_in_bits_l_fu_338_p4;

assign mul_ln87_1_fu_420_p2 = (mul_ln87_1_fu_420_p0 * mul_ln87_1_fu_420_p1);

assign mul_ln87_2_fu_429_p1 = mul_ln87_2_fu_429_p10;

assign mul_ln87_2_fu_429_p10 = mul_ln87_1_reg_1571;

assign mul_ln87_2_fu_429_p2 = ($signed(mul_ln87_reg_1566) * $signed({{1'b0}, {mul_ln87_2_fu_429_p1}}));

assign mul_ln87_fu_1441_p0 = mul_ln87_fu_1441_p00;

assign mul_ln87_fu_1441_p00 = ins_in_tiles_m_fu_314_p1;

assign mul_ln87_fu_1441_p1 = mul_ln87_fu_1441_p10;

assign mul_ln87_fu_1441_p10 = ins_in_tiles_n_fu_328_p4;

assign offset_res_fu_1401_p2 = (offset_res_0_reg2mem_0_fu_162 + 8'd1);

assign out_V_V_1_ack_in = out_V_V_1_state[1'd1];

assign out_V_V_1_ack_out = out_V_V_TREADY;

assign out_V_V_1_load_A = (out_V_V_1_state_cmp_full & ~out_V_V_1_sel_wr);

assign out_V_V_1_load_B = (out_V_V_1_state_cmp_full & out_V_V_1_sel_wr);

assign out_V_V_1_sel = out_V_V_1_sel_rd;

assign out_V_V_1_state_cmp_full = ((out_V_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign out_V_V_1_vld_out = out_V_V_1_state[1'd0];

assign out_V_V_TDATA = out_V_V_1_data_out;

assign out_V_V_TVALID = out_V_V_1_state[1'd0];

assign p_Result_4_i_fu_348_p4 = {{in_V_V_0_data_out[61:56]}};

assign p_cast34_fu_484_p1 = ins_in_bits_l_reg_1520;

assign p_cast35_fu_481_p1 = ins_in_tiles_m_reg_1501;

assign r_fu_654_p2 = ($signed(sext_ln91_fu_650_p1) + $signed(xor_ln91_fu_633_p2));

assign rhstile_first_fu_678_p2 = (tile_first_fu_661_p2 & icmp_ln95_fu_672_p2);

assign rhstile_last_fu_693_p2 = (tile_last_fu_667_p2 & icmp_ln96_fu_688_p2);

assign rmem_region_fu_1104_p2 = (rmem_region_0_reg2mem_0_fu_150 + 8'd1);

assign rmem_region_offset_fu_1110_p2 = (lmem_region_size_reg_1615 + rmem_region_offset_0_reg2mem_0_fu_146);

assign select_ln151_fu_1413_p3 = ((icmp_ln151_fu_1407_p2[0:0] === 1'b1) ? 8'd0 : offset_res_fu_1401_p2);

assign select_ln177_1_fu_1128_p3 = ((icmp_ln177_fu_1115_p2[0:0] === 1'b1) ? 16'd0 : rmem_region_offset_fu_1110_p2);

assign select_ln177_fu_1120_p3 = ((icmp_ln177_fu_1115_p2[0:0] === 1'b1) ? 8'd0 : rmem_region_fu_1104_p2);

assign select_ln185_10_fu_1220_p3 = ((icmp_ln185_2_fu_1144_p2[0:0] === 1'b1) ? grp_fu_262_p3 : z2_1_fu_130);

assign select_ln185_11_fu_1235_p3 = ((icmp_ln185_2_fu_1144_p2[0:0] === 1'b1) ? grp_fu_270_p2 : grp_fu_227_p2);

assign select_ln185_1_fu_1033_p3 = ((icmp_ln185_fu_972_p2[0:0] === 1'b1) ? select_ln187_fu_978_p3 : z1_1_fu_134);

assign select_ln185_2_fu_1048_p3 = ((icmp_ln185_fu_972_p2[0:0] === 1'b1) ? grp_fu_262_p3 : z2_1_fu_130);

assign select_ln185_3_fu_1063_p3 = ((icmp_ln185_fu_972_p2[0:0] === 1'b1) ? grp_fu_270_p2 : grp_fu_227_p2);

assign select_ln185_4_fu_860_p3 = ((icmp_ln185_1_fu_815_p2[0:0] === 1'b1) ? grp_fu_232_p2 : slice_0_reg2mem_0_fu_138);

assign select_ln185_5_fu_876_p3 = ((icmp_ln185_1_fu_815_p2[0:0] === 1'b1) ? select_ln187_1_fu_821_p3 : z1_1_fu_134);

assign select_ln185_6_fu_891_p3 = ((icmp_ln185_1_fu_815_p2[0:0] === 1'b1) ? grp_fu_262_p3 : z2_1_fu_130);

assign select_ln185_7_fu_906_p3 = ((icmp_ln185_1_fu_815_p2[0:0] === 1'b1) ? grp_fu_270_p2 : grp_fu_227_p2);

assign select_ln185_8_fu_1189_p3 = ((icmp_ln185_2_fu_1144_p2[0:0] === 1'b1) ? grp_fu_232_p2 : slice_0_reg2mem_0_fu_138);

assign select_ln185_9_fu_1205_p3 = ((icmp_ln185_2_fu_1144_p2[0:0] === 1'b1) ? select_ln187_2_fu_1150_p3 : z1_1_fu_134);

assign select_ln185_fu_1017_p3 = ((icmp_ln185_fu_972_p2[0:0] === 1'b1) ? grp_fu_232_p2 : slice_0_reg2mem_0_fu_138);

assign select_ln187_1_fu_821_p3 = ((grp_fu_237_p2[0:0] === 1'b1) ? 8'd0 : grp_fu_247_p2);

assign select_ln187_2_fu_1150_p3 = ((grp_fu_237_p2[0:0] === 1'b1) ? 8'd0 : grp_fu_247_p2);

assign select_ln187_fu_978_p3 = ((grp_fu_237_p2[0:0] === 1'b1) ? 8'd0 : grp_fu_247_p2);

assign select_ln190_10_fu_1181_p3 = ((and_ln190_2_fu_1175_p2[0:0] === 1'b1) ? select_ln196_2_fu_1167_p3 : m_0_reg2mem_0_fu_142);

assign select_ln190_11_fu_1197_p3 = ((and_ln190_2_fu_1175_p2[0:0] === 1'b1) ? 8'd0 : select_ln185_8_fu_1189_p3);

assign select_ln190_12_fu_1213_p3 = ((and_ln190_2_fu_1175_p2[0:0] === 1'b1) ? z1_reg_1588 : select_ln185_9_fu_1205_p3);

assign select_ln190_13_fu_1228_p3 = ((and_ln190_2_fu_1175_p2[0:0] === 1'b1) ? z2_reg_1595 : select_ln185_10_fu_1220_p3);

assign select_ln190_14_fu_1243_p3 = ((and_ln190_2_fu_1175_p2[0:0] === 1'b1) ? j_reg_1602 : select_ln185_11_fu_1235_p3);

assign select_ln190_1_fu_1025_p3 = ((and_ln190_fu_1003_p2[0:0] === 1'b1) ? 8'd0 : select_ln185_fu_1017_p3);

assign select_ln190_2_fu_1041_p3 = ((and_ln190_fu_1003_p2[0:0] === 1'b1) ? z1_reg_1588 : select_ln185_1_fu_1033_p3);

assign select_ln190_3_fu_1056_p3 = ((and_ln190_fu_1003_p2[0:0] === 1'b1) ? z2_reg_1595 : select_ln185_2_fu_1048_p3);

assign select_ln190_4_fu_1071_p3 = ((and_ln190_fu_1003_p2[0:0] === 1'b1) ? j_reg_1602 : select_ln185_3_fu_1063_p3);

assign select_ln190_5_fu_852_p3 = ((and_ln190_1_fu_846_p2[0:0] === 1'b1) ? select_ln196_1_fu_838_p3 : m_0_reg2mem_0_fu_142);

assign select_ln190_6_fu_868_p3 = ((and_ln190_1_fu_846_p2[0:0] === 1'b1) ? 8'd0 : select_ln185_4_fu_860_p3);

assign select_ln190_7_fu_884_p3 = ((and_ln190_1_fu_846_p2[0:0] === 1'b1) ? z1_reg_1588 : select_ln185_5_fu_876_p3);

assign select_ln190_8_fu_899_p3 = ((and_ln190_1_fu_846_p2[0:0] === 1'b1) ? z2_reg_1595 : select_ln185_6_fu_891_p3);

assign select_ln190_9_fu_914_p3 = ((and_ln190_1_fu_846_p2[0:0] === 1'b1) ? j_reg_1602 : select_ln185_7_fu_906_p3);

assign select_ln190_fu_1009_p3 = ((and_ln190_fu_1003_p2[0:0] === 1'b1) ? select_ln196_fu_995_p3 : m_0_reg2mem_0_fu_142);

assign select_ln196_1_fu_838_p3 = ((grp_fu_281_p2[0:0] === 1'b1) ? 16'd0 : grp_fu_276_p2);

assign select_ln196_2_fu_1167_p3 = ((grp_fu_281_p2[0:0] === 1'b1) ? 16'd0 : grp_fu_276_p2);

assign select_ln196_fu_995_p3 = ((grp_fu_281_p2[0:0] === 1'b1) ? 16'd0 : grp_fu_276_p2);

assign sext_ln121_1_fu_525_p1 = add_ln121_fu_515_p2;

assign sext_ln121_fu_521_p1 = add_ln121_fu_515_p2;

assign sext_ln185_1_fu_807_p1 = grp_fu_227_p2;

assign sext_ln185_2_fu_1136_p1 = grp_fu_227_p2;

assign sext_ln185_fu_964_p1 = grp_fu_227_p2;

assign sext_ln90_1_fu_608_p0 = j_1_fu_126;

assign sext_ln90_1_fu_608_p1 = sext_ln90_1_fu_608_p0;

assign sext_ln90_fu_604_p0 = j_1_fu_126;

assign sext_ln90_fu_604_p1 = sext_ln90_fu_604_p0;

assign sext_ln91_fu_650_p1 = add_ln91_fu_645_p2;

assign sext_ln94_fu_499_p1 = $signed(add_ln94_fu_493_p2);

assign sub_ln132_1_fu_723_p2 = (zext_ln91_2_fu_621_p1 - zext_ln132_1_fu_719_p1);

assign sub_ln132_2_fu_795_p2 = (zext_ln91_2_fu_621_p1 - zext_ln132_2_fu_791_p1);

assign sub_ln132_fu_759_p2 = (zext_ln91_2_fu_621_p1 - zext_ln132_fu_755_p1);

assign sub_ln90_fu_612_p2 = ($signed(p_cast34_reg_1621) - $signed(sext_ln90_1_fu_608_p1));

assign tile_first_fu_661_p2 = ((slice_0_reg2mem_0_fu_138 == 8'd0) ? 1'b1 : 1'b0);

assign tile_last_fu_667_p2 = ((zext_ln91_3_fu_625_p1 == add_ln94_1_reg_1631) ? 1'b1 : 1'b0);

assign tmp_i1_fu_1304_p10 = {{{{{{{{{xor_ln301_1_fu_1299_p2}, {tile_last_reg_1753}}, {tile_first_reg_1746}}, {xor_ln124_1_reg_1768}}, {icmp_ln132_1_reg_1778}}, {exec_numTiles_V_reg_1507}}, {add_ln301_7_reg_1773}}, {grp_fu_1474_p3}}, {71'd5}};

assign tmp_i2_fu_1422_p10 = {{{{{{{{{xor_ln301_2_reg_1877}, {tile_last_reg_1753}}, {tile_first_reg_1746}}, {xor_ln124_2_reg_1808}}, {icmp_ln132_2_reg_1818}}, {exec_numTiles_V_reg_1507}}, {add_ln301_11_reg_1813}}, {add_ln301_9_reg_1867}}, {71'd5}};

assign tmp_i_fu_1369_p10 = {{{{{{{{{xor_ln301_fu_1364_p2}, {tile_last_reg_1753}}, {tile_first_reg_1746}}, {xor_ln124_reg_1788}}, {icmp_ln132_reg_1798}}, {exec_numTiles_V_reg_1507}}, {add_ln301_3_reg_1793}}, {add_ln301_1_reg_1862}}, {71'd5}};

assign trunc_ln301_1_fu_1295_p1 = offset_res_0_reg2mem_0_fu_162[0:0];

assign trunc_ln301_2_fu_1389_p1 = offset_res_0_reg2mem_0_fu_162[0:0];

assign trunc_ln301_fu_1360_p1 = offset_res_0_reg2mem_0_fu_162[0:0];

assign xor_ln124_1_fu_709_p2 = (and_ln123_1_fu_704_p2 ^ and_ln122_1_fu_699_p2);

assign xor_ln124_2_fu_781_p2 = (and_ln123_2_fu_776_p2 ^ and_ln122_2_fu_771_p2);

assign xor_ln124_fu_745_p2 = (and_ln123_fu_740_p2 ^ and_ln122_fu_735_p2);

assign xor_ln301_1_fu_1299_p2 = (trunc_ln301_1_fu_1295_p1 ^ tmp_5_reg_1783);

assign xor_ln301_2_fu_1393_p2 = (trunc_ln301_2_fu_1389_p1 ^ tmp_6_reg_1823);

assign xor_ln301_fu_1364_p2 = (trunc_ln301_fu_1360_p1 ^ tmp_4_reg_1803);

assign xor_ln91_1_fu_639_p2 = (zext_ln91_1_fu_629_p1 ^ 16'd65535);

assign xor_ln91_fu_633_p2 = (zext_ln91_fu_617_p1 ^ 32'd4294967295);

assign z1_fu_442_p1 = icmp_ln71_fu_437_p2;

assign z2_fu_451_p1 = icmp_ln72_fu_446_p2;

assign zext_ln132_1_fu_719_p1 = z2_1_fu_130;

assign zext_ln132_2_fu_791_p1 = z2_1_fu_130;

assign zext_ln132_fu_755_p1 = z2_1_fu_130;

assign zext_ln185_1_fu_811_p1 = z1_1_fu_134;

assign zext_ln185_2_fu_1140_p1 = z1_1_fu_134;

assign zext_ln185_fu_968_p1 = z1_1_fu_134;

assign zext_ln190_1_fu_829_p1 = grp_fu_232_p2;

assign zext_ln190_2_fu_1158_p1 = grp_fu_232_p2;

assign zext_ln190_fu_986_p1 = grp_fu_232_p2;

assign zext_ln414_1_fu_1319_p1 = tmp_i1_fu_1304_p10;

assign zext_ln414_2_fu_1436_p1 = tmp_i2_fu_1422_p10;

assign zext_ln414_fu_1384_p1 = tmp_i_fu_1369_p10;

assign zext_ln79_fu_468_p1 = ins_in_nbufs_fetch_exec_log2_reg_1560;

assign zext_ln87_1_fu_490_p1 = p_Result_4_i_reg_1528;

assign zext_ln87_fu_487_p1 = p_Result_4_i_reg_1528;

assign zext_ln91_1_fu_629_p1 = slice_0_reg2mem_0_fu_138;

assign zext_ln91_2_fu_621_p1 = slice_0_reg2mem_0_fu_138;

assign zext_ln91_3_fu_625_p1 = slice_0_reg2mem_0_fu_138;

assign zext_ln91_fu_617_p1 = slice_0_reg2mem_0_fu_138;

assign zext_ln96_fu_684_p1 = m_0_reg2mem_0_fu_142;

always @ (posedge ap_clk) begin
    ins_in_bits_r_reg_1582[7:6] <= 2'b00;
    z1_reg_1588[7:1] <= 7'b0000000;
    z2_reg_1595[7:1] <= 7'b0000000;
    lmem_region_size_reg_1615[15:11] <= 5'b00000;
    p_cast34_reg_1621[9:8] <= 2'b00;
    zext_ln87_reg_1626[8:6] <= 3'b000;
end

endmodule //ExecInstrGen_RHSLHSTiling_1024ul_1024ul_0ul_s
